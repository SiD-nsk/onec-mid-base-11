
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
		//++ Дим 
	//Добавлениена форму СогласованнаяСкидка
	РодительскаяГруппа = Элементы.ГруппаШапкаЛево;
	Группа = Элементы.Добавить("ГруппаСкидка", Тип ("ГруппаФормы"), РодительскаяГруппа);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Заголовок = "";
	
	ПолеВвода = Элементы.Добавить("ЭлементСогласованнаяСкидка", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.СогласованнаяСкидка";
	ПолеВвода.УстановитьДействие("ПриИзменении","СогласованнаяСкидкаПриИзменении");
	
	//Добавление на форму кнопки пересчета
	Команда = Команды.Добавить("ПересчитатьТаблицу");
	Команда.Заголовок = ("ПересчитатьТаблицу");
	Команда.Действие = ("ПересчитатьТаблицу");
	
	КнопкаФормы = Элементы.Добавить("КнопкаПересчитатьТаблицу", Тип("КнопкаФормы"), Группа);
	КнопкаФормы.ИмяКоманды = "ПересчитатьТаблицу";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;

	//Добавление на форму КонтактныеЛица
	РодительскаяГруппа = Элементы.ГруппаШапкаПраво;
	Группа = Элементы.Добавить("КонтактныеЛица", Тип ("ГруппаФормы"), РодительскаяГруппа);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Заголовок = "";
	
	ПолеВвода = Элементы.Добавить("ЭлементКонтактныеЛица", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.КонтактныеЛица";
	
	//--Дим
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//++Дим 
	//ИсходныйКОД
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество; 
	//Измененный
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * (100 - Объект.СогласованнаяСкидка)/100;
	//--Дим
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

//++Дим
&НаКлиенте
Асинх Процедура СогласованнаяСкидкаПриИзменении(Элемент)
	
	Если Объект.Товары.Количество() > 0 ИЛИ Объект.Услуги.Количество() > 0 Тогда 
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Ждать ВопросАсинх("Пересчитать суммы с учетом новой скидки?", Режим, 0);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			Для Каждого Строка Из Объект.Товары Цикл
				РассчитатьСуммуСтроки(Строка);
			КонецЦикла;
			
			Для Каждого Строка Из Объект.Услуги Цикл
				РассчитатьСуммуСтроки(Строка);
			КонецЦикла;
			
			КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 


&НаКлиенте
Процедура ПересчитатьТаблицу(Команда)
	
	Для Каждого Строка Из Объект.Товары Цикл
		ТекущиеДанные = Строка;
		РассчитатьСуммуСтроки(ТекущиеДанные);
	КонецЦикла;
	
	Для Каждого Строка Из Объект.Услуги Цикл
		ТекущиеДанные = Строка;
		РассчитатьСуммуСтроки(ТекущиеДанные);
	КонецЦикла;
	
КонецПроцедуры
//--Дим2


#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
